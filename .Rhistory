Alper = mean(Al., na.rm= TRUE),
Alpersd = sd(Al., na.rm= TRUE),
Feper = mean(Fe., na.rm=TRUE),
Fepersd = sd(Fe., na.rm= TRUE),
Pbper = mean(Pb., na.rm=TRUE),
Pbpersd = sd(Pb., na.rm= TRUE)
)
Monsump$Site <- gsub("HU", "HU Beltsville", Monsump$Site)
Monsump$Site <- gsub("ES", "Essex", Monsump$Site)
Mon2020S <- Mon2020 %>% group_by(Site)
Monsums <- Mon2020S %>% summarise(
Almean = mean(Al, na.rm= TRUE),
Alsd = sd(Al, na.rm= TRUE),
Femean = mean(Fe, na.rm=TRUE),
Fesd = sd(Fe, na.rm= TRUE),
Pbmean = mean(Pb, na.rm=TRUE),
Pbsd = sd(Pb, na.rm= TRUE),
PMmean= mean(PM2.5, na.rm=TRUE),
PMsd = sd(PM2.5, na.rm=TRUE)
)
Monsums$Site <- gsub("HU", "HU Beltsville", Monsums$Site)
Monsums$Site <- gsub("ES", "Essex", Monsums$Site)
MonwebS <- MonWebs %>% group_by(Area)
Websum <- MonwebS %>% summarise(
Alper = mean(Al_perc_day, na.rm= TRUE),
Alpersd = sd(Al_perc_day, na.rm= TRUE),
Feper = mean(Fe_Perc_Day, na.rm=TRUE),
Fepersd = sd(Fe_Perc_Day, na.rm= TRUE),
Pbper = mean(Pb_Perc_Day, na.rm=TRUE),
Pbpersd = sd(Pb_Perc_Day, na.rm= TRUE)
)
Websum$Area <- gsub("HU", "HU Beltsville", Websum$Area)
Websum$Area <- gsub("ES", "Essex", Websum$Area)
BmoreG<- Bmore %>% group_by(Neighborhood)
BmoreSum <- BmoreG %>% summarise(
Alper = mean(Al_per_day, na.rm= TRUE),
Alpersd = sd(Al_per_day, na.rm= TRUE),
Feper = mean(Fe_per_day, na.rm=TRUE),
Fepersd = sd(Fe_per_day, na.rm= TRUE),
Pbper = mean(Pb_per_day, na.rm=TRUE),
Pbpersd = sd(Pb_per_day, na.rm= TRUE)
)
BmoreSum$Neighborhood <- gsub("BK", "Brooklyn", BmoreSum$Neighborhood)
BmoreSum$Neighborhood <- gsub("CB", "Curtis Bay", BmoreSum$Neighborhood)
jpeg("C://Users/nrast/OneDrive/Documents/GitHub/FrontiersInEcologyPaper/bmorewebsfe.jpg", width = 1000, height = 600)
# 2. Create the plot
# First row with scatter plot
ggplot(BmoreSum, aes(x=Neighborhood, y=Feper)) +
geom_bar( aes(x=Neighborhood, y=Feper), stat="identity", fill="firebrick", alpha=1) +
geom_linerange( aes(x=Neighborhood, ymin=Feper- Fepersd, ymax=Feper + Fepersd), colour="springgreen3", alpha=1, size=1.3)+
xlab("") +
geom_text(aes(label="*"), position = position_nudge(.05), vjust = -.05, size=15)+
ylab ("% Fe in webs per day") +
theme(panel.background = element_rect(fill = 'white', colour = 'gray')) +
theme(text=element_text(size= 35,  family="TT Arial"))
dev.off()
jpeg("C://Users/nrast/OneDrive/Documents/GitHub/FrontiersInEcologyPaper/bmorewebsal.jpg", width = 1000, height = 600)
# 2. Create the plot
# First row with scatter plot
ggplot(BmoreSum, aes(x=Neighborhood, y=Alper)) +
geom_bar( aes(x=Neighborhood, y=Alper), stat="identity", fill="deepskyblue", alpha=1) +
geom_linerange( aes(x=Neighborhood, ymin=Alper- Alpersd, ymax=Alper + Alpersd), colour="orange", alpha=1, size=1.3) +
xlab("") +
ylab ("% Al in webs per day") +
theme(panel.background = element_rect(fill = 'white', colour = 'gray')) +
theme(text=element_text(size=35,  family="TT Arial"))
dev.off()
jpeg("C:\\Users\\Nava\\OneDrive\\Documents\\Desktop\\FIEE paper\\bmorewebspb.jpg", width = 1000, height = 600)
library(ggplot2)
library(dplyr)
library(ggpubr)
library(gridExtra)
Bmore <- read.csv("C://Users/nrast/OneDrive/Documents/GitHub/FrontiersInEcologyPaper/R2_Recalculate.csv")
Mon2020 <- read.csv("C://Users/nrast/OneDrive/Documents/GitHub/FrontiersInEcologyPaper/Mon2020all.csv")
MonWebs <- read.csv("C://Users/nrast/OneDrive/Documents/GitHub/FrontiersInEcologyPaper/Air_Mon_Recalculate.csv")
AADT <- read.csv("C://Users/nrast/OneDrive/Documents/GitHub/FrontiersInEcologyPaper/AADT_INF_STA.csv")
Mon2020S <- Mon2020 %>% group_by(Site)
Monsump <- Mon2020S %>% summarise(
Alper = mean(Al., na.rm= TRUE),
Alpersd = sd(Al., na.rm= TRUE),
Feper = mean(Fe., na.rm=TRUE),
Fepersd = sd(Fe., na.rm= TRUE),
Pbper = mean(Pb., na.rm=TRUE),
Pbpersd = sd(Pb., na.rm= TRUE)
)
Monsump$Site <- gsub("HU", "HU Beltsville", Monsump$Site)
Monsump$Site <- gsub("ES", "Essex", Monsump$Site)
Mon2020S <- Mon2020 %>% group_by(Site)
Monsums <- Mon2020S %>% summarise(
Almean = mean(Al, na.rm= TRUE),
Alsd = sd(Al, na.rm= TRUE),
Femean = mean(Fe, na.rm=TRUE),
Fesd = sd(Fe, na.rm= TRUE),
Pbmean = mean(Pb, na.rm=TRUE),
Pbsd = sd(Pb, na.rm= TRUE),
PMmean= mean(PM2.5, na.rm=TRUE),
PMsd = sd(PM2.5, na.rm=TRUE)
)
Monsums$Site <- gsub("HU", "HU Beltsville", Monsums$Site)
Monsums$Site <- gsub("ES", "Essex", Monsums$Site)
MonwebS <- MonWebs %>% group_by(Area)
Websum <- MonwebS %>% summarise(
Alper = mean(Al_perc_day, na.rm= TRUE),
Alpersd = sd(Al_perc_day, na.rm= TRUE),
Feper = mean(Fe_Perc_Day, na.rm=TRUE),
Fepersd = sd(Fe_Perc_Day, na.rm= TRUE),
Pbper = mean(Pb_Perc_Day, na.rm=TRUE),
Pbpersd = sd(Pb_Perc_Day, na.rm= TRUE)
)
Websum$Area <- gsub("HU", "HU Beltsville", Websum$Area)
Websum$Area <- gsub("ES", "Essex", Websum$Area)
BmoreG<- Bmore %>% group_by(Neighborhood)
BmoreSum <- BmoreG %>% summarise(
Alper = mean(Al_per_day, na.rm= TRUE),
Alpersd = sd(Al_per_day, na.rm= TRUE),
Feper = mean(Fe_per_day, na.rm=TRUE),
Fepersd = sd(Fe_per_day, na.rm= TRUE),
Pbper = mean(Pb_per_day, na.rm=TRUE),
Pbpersd = sd(Pb_per_day, na.rm= TRUE)
)
BmoreSum$Neighborhood <- gsub("BK", "Brooklyn", BmoreSum$Neighborhood)
BmoreSum$Neighborhood <- gsub("CB", "Curtis Bay", BmoreSum$Neighborhood)
jpeg("C://Users/nrast/OneDrive/Documents/GitHub/FrontiersInEcologyPaper/bmorewebsfe.jpg", width = 1000, height = 600)
# 2. Create the plot
# First row with scatter plot
ggplot(BmoreSum, aes(x=Neighborhood, y=Feper)) +
geom_bar( aes(x=Neighborhood, y=Feper), stat="identity", fill="firebrick", alpha=1) +
geom_linerange( aes(x=Neighborhood, ymin=Feper- Fepersd, ymax=Feper + Fepersd), colour="springgreen3", alpha=1, size=1.3)+
xlab("") +
geom_text(aes(label="*"), position = position_nudge(.05), vjust = -.05, size=15)+
ylab ("% Fe in webs per day") +
theme(panel.background = element_rect(fill = 'white', colour = 'gray')) +
theme(text=element_text(size= 35,  family="TT Arial"))
dev.off()
jpeg("C://Users/nrast/OneDrive/Documents/GitHub/FrontiersInEcologyPaper/bmorewebsal.jpg", width = 1000, height = 600)
# 2. Create the plot
# First row with scatter plot
ggplot(BmoreSum, aes(x=Neighborhood, y=Alper)) +
geom_bar( aes(x=Neighborhood, y=Alper), stat="identity", fill="deepskyblue", alpha=1) +
geom_linerange( aes(x=Neighborhood, ymin=Alper- Alpersd, ymax=Alper + Alpersd), colour="orange", alpha=1, size=1.3) +
xlab("") +
ylab ("% Al in webs per day") +
theme(panel.background = element_rect(fill = 'white', colour = 'gray')) +
theme(text=element_text(size=35,  family="TT Arial"))
dev.off()
jpeg("C://Users/nrast/OneDrive/Documents/GitHub/FrontiersInEcologyPaper/bmorewebspb.jpg", width = 1000, height = 600)
# 2. Create the plot
# First row with scatter plot
ggplot(BmoreSum, aes(x=Neighborhood, y=Pbper)) +
geom_bar( aes(x=Neighborhood, y=Pbper), stat="identity", fill="darkorchid", alpha=1) +
geom_linerange( aes(x=Neighborhood, ymin=Pbper- Pbpersd, ymax=Pbper + Pbpersd), colour="deeppink", alpha=1, size=1.3) +
xlab("") +
ylab ("% Pb in webs per day") +
theme(panel.background = element_rect(fill = 'white', colour = 'gray')) +
theme(text=element_text(size=35,  family="TT Arial"))
dev.off()
jpeg("C://Users/nrast/OneDrive/Documents/GitHub/FrontiersInEcologyPaper/monPM.jpg", width = 1000, height = 600)
MonsumPM <- Monsums %>% add_row(Site= "Baltimore", PMmean = 7.0, PMsd = 3.9)
ggplot(MonsumPM) +
geom_bar( aes(x=Site, y=PMmean), stat="identity", fill="gold2", alpha=1) +
geom_linerange( aes(x=Site, ymin=PMmean-PMsd, ymax=PMmean+PMsd), colour="black", alpha=1, size=1.3)+
theme(panel.background = element_rect(fill = 'white', colour = 'gray'))+
xlab("") + ylab("PM 2.5 (Âµg/m3)")+
theme(text=element_text(size=35,  family="TT Arial"))
dev.off()
jpeg("C://Users/nrast/OneDrive/Documents/GitHub/FrontiersInEcologyPaper/monPb.jpg", width = 1000, height = 600)
ggplot(Monsump) +
geom_bar( aes(x=Site, y=Pbper), stat="identity", fill="darkorchid", alpha=1) +
geom_linerange( aes(x=Site, ymin=Pbper- Pbpersd, ymax=Pbper+Pbpersd), colour="deeppink", alpha=1, size=1.3)+
xlab("") +
ylab ("% Pb in PM 2.5") +
theme(panel.background = element_rect(fill = 'white', colour = 'gray'))+
theme(text=element_text(size=35,  family="TT Arial"))
dev.off()
jpeg("C://Users/nrast/OneDrive/Documents/GitHub/FrontiersInEcologyPaper/monAl.jpg", width = 1000, height = 600)
ggplot(Monsump) +
geom_bar( aes(x=Site, y=Alper), stat="identity", fill="deepskyblue", alpha=1) +
geom_linerange( aes(x=Site, ymin=Alper- Alpersd, ymax=Alper+Alpersd), colour="orange", alpha=1, size=1.3)+
xlab("") +
ylab ("% Al in PM 2.5") +
theme(panel.background = element_rect(fill = 'white', colour = 'gray'))+
theme(text=element_text(size=35,  family="TT Arial"))
dev.off()
jpeg("C://Users/nrast/OneDrive/Documents/GitHub/FrontiersInEcologyPaper/monFe.jpg", width = 1000, height = 600)
ggplot(Monsump, aes(x=Site, y=Feper)) +
geom_bar( aes(x=Site, y=Feper), stat="identity", fill="firebrick", alpha=1) +
geom_linerange( aes(x=Site, ymin=Feper- Fepersd, ymax=Feper+Fepersd), colour="springgreen3", alpha=1, size=1.3) +
xlab("") +
ylab ("% Fe in PM 2.5") +
geom_text(aes(label="*"), position = position_nudge(.05), vjust = -.05, size=15)+
theme(panel.background = element_rect(fill = 'white', colour = 'gray'))+
theme(text=element_text(size=35,  family="TT Arial"))
dev.off()
jpeg("C://Users/nrast/OneDrive/Documents/GitHub/FrontiersInEcologyPaper/monFe.jpg", width = 1000, height = 600)
ggplot(Monsump, aes(x=Site, y=Feper)) +
geom_bar( aes(x=Site, y=Feper), stat="identity", fill="firebrick", alpha=1) +
geom_linerange( aes(x=Site, ymin=Feper- Fepersd, ymax=Feper+Fepersd), colour="springgreen3", alpha=1, size=1.3) +
xlab("") +
ylab ("% Fe in PM 2.5") +
geom_text(aes(label="*"), position = position_nudge(.05), vjust = -.05, size=15)+
theme(panel.background = element_rect(fill = 'white', colour = 'gray'))+
theme(text=element_text(size=35,  family="TT Arial"))
dev.off()
jpeg("C://Users/nrast/OneDrive/Documents/GitHub/FrontiersInEcologyPaper/WebAl.jpg", width = 1000, height = 600)
ggplot(Websum, aes(x=Area, y=Alper)) +
geom_bar( aes(x=Area, y=Alper), stat="identity", fill="deepskyblue", alpha=1) +
geom_linerange( aes(x=Area, ymin=Alper- Alpersd, ymax=Alper+Alpersd), colour="orange", alpha=1, size=1.3) +
xlab("") +
ylab ("% Al in webs by day") +
geom_text(aes(label="*"), position = position_nudge(.05), vjust = -.05, size=15)+
theme(panel.background = element_rect(fill = 'white', colour = 'gray'))+
theme(text=element_text(size=35,  family="TT Arial"))
dev.off()
jpeg("C://Users/nrast/OneDrive/Documents/GitHub/FrontiersInEcologyPaper/WebFe.jpg", width = 1000, height = 600)
ggplot(Websum) +
geom_bar( aes(x=Area, y=Feper), stat="identity", fill="firebrick", alpha=1) +
geom_linerange( aes(x=Area, ymin=Feper- Fepersd, ymax=Feper+Fepersd), colour="springgreen3", alpha=1, size=1.3) +
xlab("") +
ylab ("% Fe in webs by day") +
theme(panel.background = element_rect(fill = 'white', colour = 'gray'))+
theme(text=element_text(size=35,  family="TT Arial"))
dev.off()
jpeg("C://Users/nrast/OneDrive/Documents/GitHub/FrontiersInEcologyPaper/WebPb.jpg", width = 1000, height = 600)
ggplot(Websum, aes(x=Area, y=Pbper)) +
geom_bar( aes(x=Area, y=Pbper), stat="identity", fill="darkorchid", alpha=1) +
geom_linerange( aes(x=Area, ymin=Pbper- Pbpersd, ymax=Pbper+Pbpersd), colour="deeppink", alpha=1, size=1.3) +
xlab("") +
ylab ("% Pb in webs by day") +
geom_text(aes(label="*"), position = position_nudge(.05), vjust = -.05, size=15)+
theme(panel.background = element_rect(fill = 'white', colour = 'gray'))+
theme(text=element_text(size=35,  family="TT Arial"))
dev.off()
#install.packages("dplyr")
install.packages("EnvStats")
#install.packages("readxl")
library(dplyr)
library(readxl)
library(EnvStats)
library(car)
E_R1_Normalized <- read_excel("C:/Users/Nava/Downloads/MyResearch/E_R1_Normalized.xlsx")
#install.packages("dplyr")
install.packages("EnvStats")
#install.packages("readxl")
library(dplyr)
library(readxl)
library(EnvStats)
library(car)
E_R1_Normalized <- read_excel("C://Users/nrast/OneDrive/Documents/GitHub/nrastegthesis/E_R1_Normalized.xlsx")
install.packages("EnvStats")
#install.packages("dplyr")
install.packages("EnvStats")
#install.packages("readxl")
library(dplyr)
library(readxl)
library(EnvStats)
library(car)
E_R1_Normalized <- read.csv("C://Users/nrast/OneDrive/Documents/GitHub/nrastegthesis/E_R1_Normalized.csv")
#note the use of / rather than \ - if your computer uses \ in file paths, all must be replaced
print(E_R1_Normalized) #allows you to inspect all values and data types
E_Clean <- E_R1_Normalized[-c(23, 24), ]
#removes 'average' rows. R code uses ['row, column'] rather than ['column, row']
colnames(E_Clean)
colnames(E_Clean)[20] <- "SqCode"
#Fixes bad column name - R doesn't like spaces in column names
E_Clean[, c(7:19)] <- sapply(E_Clean[, c(7:19)], as.numeric)
#Converts percents and ul/ppb measurements to numeric. Note the column numbers come after a ,
hist(E_Clean$Fe_Percent)
FeLog <-logit((E_Clean$Fe_Percent)/100)
hist(FeLog)
FeAS <-asin(sqrt((E_Clean$Fe_Percent)/100))
hist(FeAS)
plot(E_Clean$Fe_Percent, E_Clean$Dist_2_industry_ft)
testinFe <- lm(Fe_Percent~Distance_Group, data=E_Clean)
#install.packages("dplyr")
install.packages("EnvStats")
#install.packages("readxl")
library(dplyr)
library(readxl)
library(EnvStats)
library(car)
E_R1_Normalized <- read.csv("C://Users/nrast/OneDrive/Documents/GitHub/nrastegthesis/E_R1_Normalized.csv")
#note the use of / rather than \ - if your computer uses \ in file paths, all must be replaced
print(E_R1_Normalized) #allows you to inspect all values and data types
E_Clean <- E_R1_Normalized[-c(23, 24), ]
#removes 'average' rows. R code uses ['row, column'] rather than ['column, row']
colnames(E_Clean)
colnames(E_Clean)[20] <- "SqCode"
#Fixes bad column name - R doesn't like spaces in column names
E_Clean[, c(7:19)] <- sapply(E_Clean[, c(7:19)], as.numeric)
#Converts percents and ul/ppb measurements to numeric. Note the column numbers come after a ,
hist(E_Clean$Fe_Percent)
FeLog <-logit((E_Clean$Fe_Percent)/100)
hist(FeLog)
FeAS <-asin(sqrt((E_Clean$Fe_Percent)/100))
hist(FeAS)
plot(E_Clean$Fe_Percent, E_Clean$Dist_2_industry_ft)
testinFe <- lm(Fe_Percent~Distance_Group, data=E_Clean)
#install.packages("dplyr")
#install.packages("EnvStats")
#install.packages("readxl")
library(dplyr)
library(readxl)
library(EnvStats)
library(car)
E_R1_Normalized <- read.csv("C://Users/nrast/OneDrive/Documents/GitHub/nrastegthesis/E_R1_Normalized.csv")
#note the use of / rather than \ - if your computer uses \ in file paths, all must be replaced
print(E_R1_Normalized) #allows you to inspect all values and data types
E_Clean <- E_R1_Normalized[-c(23, 24), ]
#removes 'average' rows. R code uses ['row, column'] rather than ['column, row']
colnames(E_Clean)
colnames(E_Clean)[20] <- "SqCode"
#Fixes bad column name - R doesn't like spaces in column names
E_Clean[, c(7:19)] <- sapply(E_Clean[, c(7:19)], as.numeric)
#Converts percents and ul/ppb measurements to numeric. Note the column numbers come after a ,
hist(E_Clean$Fe_Percent)
FeLog <-logit((E_Clean$Fe_Percent)/100)
hist(FeLog)
FeAS <-asin(sqrt((E_Clean$Fe_Percent)/100))
hist(FeAS)
plot(E_Clean$Fe_Percent, E_Clean$Dist_2_industry_ft)
testinFe <- lm(Fe_Percent~Distance_Group, data=E_Clean)
View(E_R1_Normalized)
View(E_Clean)
#install.packages("dplyr")
#install.packages("EnvStats")
#install.packages("readxl")
library(dplyr)
library(readxl)
library(EnvStats)
library(car)
E_R1_Normalized <- read.csv("C://Users/nrast/OneDrive/Documents/GitHub/nrastegthesis/E_R1_Normalized.csv")
#note the use of / rather than \ - if your computer uses \ in file paths, all must be replaced
print(E_R1_Normalized) #allows you to inspect all values and data types
E_Clean <- E_R1_Normalized[-c(23, 24), ]
#removes 'average' rows. R code uses ['row, column'] rather than ['column, row']
colnames(E_Clean)
colnames(E_Clean)[20] <- "SqCode"
#Fixes bad column name - R doesn't like spaces in column names
E_Clean[, c(7:19)] <- sapply(E_Clean[, c(7:19)], as.numeric)
#Converts percents and ul/ppb measurements to numeric. Note the column numbers come after a ,
hist(E_Clean$Fe_Percent)
FeLog <-logit((E_Clean$Fe_Percent)/100)
hist(FeLog)
FeAS <-asin(sqrt((E_Clean$Fe_Percent)/100))
hist(FeAS)
plot(E_Clean$Fe_Percent, E_Clean$Dist_2_industry_ft)
testinFeLog <- lm(FeLog~Distance_Group, data=E_Clean)
#install.packages("dplyr")
#install.packages("EnvStats")
#install.packages("readxl")
library(dplyr)
library(readxl)
library(EnvStats)
library(car)
E_R1_Normalized <- read.csv("C://Users/nrast/OneDrive/Documents/GitHub/nrastegthesis/E_R1_Normalized.csv")
#note the use of / rather than \ - if your computer uses \ in file paths, all must be replaced
print(E_R1_Normalized) #allows you to inspect all values and data types
E_Clean <- E_R1_Normalized[-c(23, 24), ]
#removes 'average' rows. R code uses ['row, column'] rather than ['column, row']
colnames(E_Clean)
colnames(E_Clean)[20] <- "SqCode"
#Fixes bad column name - R doesn't like spaces in column names
E_Clean[, c(7:19)] <- sapply(E_Clean[, c(7:19)], as.numeric)
#Converts percents and ul/ppb measurements to numeric. Note the column numbers come after a ,
hist(E_Clean$Fe_Percent)
FeLog <-logit((E_Clean$Fe_Percent)/100)
hist(FeLog)
FeAS <-asin(sqrt((E_Clean$Fe_Percent)/100))
hist(FeAS)
plot(E_Clean$Fe_Percent, E_Clean$Dist_2_industry_ft)
AlLog <-logit((E_Clean$Al_Percent)/100)
hist(AlLog)
testinNi <- lm(Ni_Percent~Distance_Group, data=E_Clean)
#install.packages("dplyr")
#install.packages("EnvStats")
#install.packages("readxl")
library(dplyr)
library(readxl)
library(EnvStats)
library(car)
E_R1_Normalized <- read.csv("C://Users/nrast/OneDrive/Documents/GitHub/nrastegthesis/E_R1_Normalized.csv")
#note the use of / rather than \ - if your computer uses \ in file paths, all must be replaced
print(E_R1_Normalized) #allows you to inspect all values and data types
E_Clean <- E_R1_Normalized[-c(23, 24), ]
#removes 'average' rows. R code uses ['row, column'] rather than ['column, row']
colnames(E_Clean)
colnames(E_Clean)[20] <- "SqCode"
#Fixes bad column name - R doesn't like spaces in column names
E_Clean[, c(7:19)] <- sapply(E_Clean[, c(7:19)], as.numeric)
#Converts percents and ul/ppb measurements to numeric. Note the column numbers come after a ,
hist(E_Clean$Fe_Percent)
FeLog <-logit((E_Clean$Fe_Percent)/100)
hist(FeLog)
FeAS <-asin(sqrt((E_Clean$Fe_Percent)/100))
hist(FeAS)
plot(E_Clean$Fe_Percent, E_Clean$Dist_2_industry_ft)
AlLog <-logit((E_Clean$Al_Percent)/100)
hist(AlLog)
NiLog <-logit((E_Clean$Ni_Percent)/100)
hist(NiLog)
testinPb <- lm(Pb_Percent~Distance_Group, data=E_Clean)
#install.packages("dplyr")
#install.packages("EnvStats")
#install.packages("readxl")
library(dplyr)
library(readxl)
library(EnvStats)
library(car)
E_R1_Normalized <- read.csv("C://Users/nrast/OneDrive/Documents/GitHub/nrastegthesis/E_R1_Normalized.csv")
#note the use of / rather than \ - if your computer uses \ in file paths, all must be replaced
print(E_R1_Normalized) #allows you to inspect all values and data types
E_Clean <- E_R1_Normalized[-c(23, 24), ]
#removes 'average' rows. R code uses ['row, column'] rather than ['column, row']
colnames(E_Clean)
colnames(E_Clean)[20] <- "SqCode"
#Fixes bad column name - R doesn't like spaces in column names
E_Clean[, c(7:19)] <- sapply(E_Clean[, c(7:19)], as.numeric)
#Converts percents and ul/ppb measurements to numeric. Note the column numbers come after a ,
hist(E_Clean$Fe_Percent)
FeLog <-logit((E_Clean$Fe_Percent)/100)
hist(FeLog)
FeAS <-asin(sqrt((E_Clean$Fe_Percent)/100))
hist(FeAS)
plot(E_Clean$Fe_Percent, E_Clean$Dist_2_industry_ft)
AlLog <-logit((E_Clean$Al_Percent)/100)
hist(AlLog)
NiLog <-logit((E_Clean$Ni_Percent)/100)
hist(NiLog)
PbLog <-logit((E_Clean$Pb_Percent)/100)
hist(PbLog)
CrLog <-logit((E_Clean$Cr_Percent)/100)
hist(CrLog)
testinCu <- lm(Cu_Percent~Distance_Group, data=E_Clean)
#install.packages("dplyr")
#install.packages("EnvStats")
#install.packages("readxl")
library(dplyr)
library(readxl)
library(EnvStats)
library(car)
E_R1_Normalized <- read.csv("C://Users/nrast/OneDrive/Documents/GitHub/nrastegthesis/E_R1_Normalized.csv")
#note the use of / rather than \ - if your computer uses \ in file paths, all must be replaced
print(E_R1_Normalized) #allows you to inspect all values and data types
E_Clean <- E_R1_Normalized[-c(23, 24), ]
#removes 'average' rows. R code uses ['row, column'] rather than ['column, row']
colnames(E_Clean)
colnames(E_Clean)[20] <- "SqCode"
#Fixes bad column name - R doesn't like spaces in column names
E_Clean[, c(7:19)] <- sapply(E_Clean[, c(7:19)], as.numeric)
#Converts percents and ul/ppb measurements to numeric. Note the column numbers come after a ,
hist(E_Clean$Fe_Percent)
FeLog <-logit((E_Clean$Fe_Percent)/100)
hist(FeLog)
FeAS <-asin(sqrt((E_Clean$Fe_Percent)/100))
hist(FeAS)
plot(E_Clean$Fe_Percent, E_Clean$Dist_2_industry_ft)
AlLog <-logit((E_Clean$Al_Percent)/100)
hist(AlLog)
NiLog <-logit((E_Clean$Ni_Percent)/100)
hist(NiLog)
PbLog <-logit((E_Clean$Pb_Percent)/100)
hist(PbLog)
CrLog <-logit((E_Clean$Cr_Percent)/100)
hist(CrLog)
CuLog <-logit((E_Clean$Cu_Percent)/100)
hist(CuLog)
ZnLog <-logit((E_Clean$Zn_Percent)/100)
hist(ZnLog)
HwFe <- lm(Fe_Percent~HW_Int, data=E_Clean)
summary(HwFe)
FeLogHw <- lm(FeLog~HW_Int, data=E_Clean)
summary(FeLogHw)
HwAl <- lm(Al_Percent~HW_Int, data=E_Clean)
summary(HwAl)
boxplot(Al_Percent~HW_Int,data=E_Clean)
AlLogHw <- lm(AlLog~HW_Int, data=E_Clean)
summary(AlLogHw)
HwPb <- lm(Pb_Percent~HW_Int, data=E_Clean)
summary(HwPb)
PbLogHw <- lm(PbLog~HW_Int, data=E_Clean)
summary(PbLogHw)
HwZn <- lm(Fe_Percent~HW_Int, data=E_Clean)
summary(HwZn)
ZnLogHw <- lm(ZnLog~HW_Int, data=E_Clean)
summary(ZnLogHw)
HwNi <- lm(Ni_Percent~HW_Int, data=E_Clean)
summary(HwNi)
NiLogHw <- lm(NiLog~HW_Int, data=E_Clean)
summary(NiLogHw)
HwCu <- lm(Cu_Percent~HW_Int, data=E_Clean)
summary(HwCu)
CuLogHw <- lm(CuLog~HW_Int, data=E_Clean)
summary(CuLogHw)
HwCr <- lm(Cr_Percent~HW_Int, data=E_Clean)
summary(HwCr)
CrLogHw <- lm(CrLog~HW_Int, data=E_Clean)
summary(CrLogHw)
t.test(AlLog~HW_Int, data=E_Clean)
t.test(Pb_Percent~HW_Int, data=E_Clean)
t.test(PbLog~HW_Int, data=E_Clean)
t.test(Al_percent~HW_Int, data=E_Clean)
t.test(Al_Percent~HW_Int, data=E_Clean)
t.test(Fe_Percent~HW_Int, data=E_Clean)
t.test(FeLog~HW_Int, data=E_Clean)
t.test(ZnLog~HW_Int, data=E_Clean)
t.test(Zn_Percent~HW_Int, data=E_Clean)
t.test(Ni_Percent~HW_Int, data=E_Clean)
t.test(NiLog~HW_Int, data=E_Clean)
t.test(Cu_Percent~HW_Int, data=E_Clean)
t.test(CuLog~HW_Int, data=E_Clean)
t.test(Cr_Percent~HW_Int, data=E_Clean)
t.test(CrLog~HW_Int, data=E_Clean)
